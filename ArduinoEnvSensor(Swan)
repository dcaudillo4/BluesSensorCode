#include <Notecard.h>
#include <Wire.h>
#include <seeed_bme680.h>
#define serialDebug Serial
#define productUID "com.blues.dcaudillo:arduinosensor"

Notecard notecard;

#define IIC_ADDR  uint8_t(0x76)
Seeed_BME680 bmeSensor(IIC_ADDR);

void setup() {

  delay(2500);
  serialDebug.begin(115200);
  Wire.begin();
  notecard.begin();
  notecard.setDebugOutputStream(serialDebug);

  J *req = notecard.newRequest("hub.set");
  JAddStringToObject(req, "product", productUID);
  JAddStringToObject(req, "mode", "continuous");
  JAddNumberToObject(req, "inbound", 1);
  JAddBoolToObject(req, "sync", true);
  notecard.sendRequest(req);

  req = notecard.newRequest("env.default");
  JAddStringToObject(req, "name", "temperatureunit");
  JAddStringToObject(req, "text", "Celcuis");
  notecard.sendRequest(req);

  delay(2000);

  if (!bmeSensor.init()) {
    serialDebug.println("Could not find a valid BME680 sensor...");
  } else {
    serialDebug.println("BME680 Connected...");
  }

}

void loop() {

  if (bmeSensor.read_sensor_data()) {
    serialDebug.println("Failed to obtain a reading...");
    delay(15000);
    return;
  }
  
  const char* temperatureunit = "C";

  J *req = notecard.newRequest("env.get");
  if (req != NULL) {
    JAddStringToObject(req, "name", "temperatureunit");

    J*response = notecard.requestAndResponse(req);
    temperatureunit = JGetString(response, "text");
  }

  float temperatureValue = bmeSensor.sensor_result_value.temperature;
  char displayUnits = temperatureunit[0];

  if (displayUnits == 'F') {
    temperatureValue = temperatureValue * 9 / 5 + 32; // only do conversion once

  } else if (displayUnits == 'C') {

  } else {
    serialDebug.print("**** INVALID TEMPERATURE UNITS ");
    serialDebug.println(displayUnits);
    delay(5000);
    return;
  }


  serialDebug.print("Temperature = ");
  serialDebug.print(temperatureValue);
  serialDebug.print(" *");
  serialDebug.println(displayUnits);

  serialDebug.print("Humidity = ");
  serialDebug.print(bmeSensor.sensor_result_value.humidity);
  serialDebug.println(" %");

  req = notecard.newRequest("note.add");
  if (req != NULL) {
    JAddStringToObject(req, "file", "sensors.qo");
    JAddBoolToObject(req, "sync", true);

    J *body = JCreateObject();
    if (body != NULL) {
      JAddNumberToObject(body, "temp", temperatureValue);
      JAddNumberToObject(body, "humidity", bmeSensor.sensor_result_value.humidity);
      JAddItemToObject(req, "body", body);
    }

    notecard.sendRequest(req);
  }

  delay(15000);
}
